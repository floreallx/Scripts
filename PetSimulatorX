do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==2) then function v22()local v31=v1(v16,v19,v19);v19=v19 + 1 ;return v31;end v23=nil;function v23()local v32,v33=v1(v16,v19,v19 + (903 -(628 + 273)) );v19=v19 + (1614 -(791 + 821)) ;return (v33 * (1017 -(385 + 376))) + v32 ;end v18=3;end if (3==v18) then v24=nil;function v24()local v34,v35,v36,v37=v1(v16,v19,v19 + 3 );v19=v19 + 2 + 2 ;return (v37 * ((58729596 -41951896) -(339 + 145))) + (v36 * ((43333 -(230 + 55)) + 22488)) + (v35 * (769 -513)) + v34 ;end v25=nil;v18=4;end if (6==v18) then v29=nil;function v29()local v38=0 + 0 ;local v39;local v40;local v41;local v42;local v43;local v44;local v45;while true do if ((9 -6)==v38) then v45=nil;while true do local v89=0 -0 ;local v90;while true do if (v89==(0 + 0)) then v90=0;while true do if (v90==(1611 -(1173 + 438))) then local v101=1785 -(369 + 1416) ;while true do if (v101==(1901 -(823 + 1078))) then if (v39==(1307 -(389 + 917))) then local v104=602 -(518 + 84) ;while true do if (1==v104) then for v234=1 + 0 ,v44 do local v235=0;local v236;local v237;local v238;while true do if ((0 -0)==v235) then v236=0;v237=nil;v235=1674 -(1518 + 155) ;end if (v235~=(1 + 0)) then else v238=nil;while true do if (v236~=(1 -0)) then else if (v237==(1 -0)) then v238=v22()~=0 ;elseif (v237==2) then v238=v25();elseif (v237~=3) then else v238=v26();end v45[v234]=v238;break;end if (v236~=(0 + 0)) then else local v318=0 + 0 ;local v319;while true do if (0==v318) then v319=0 + 0 ;while true do if (v319==(1982 -(1837 + 144))) then v236=2 -1 ;break;end if (v319==0) then local v383=0 -0 ;local v384;while true do if ((1954 -(1704 + 250))==v383) then v384=0;while true do if (v384==(0 -0)) then v237=v22();v238=nil;v384=1195 -(43 + 1151) ;end if (v384~=1) then else v319=1;break;end end break;end end end end break;end end end end break;end end end v43[3 + 0 ]=v22();v104=4 -2 ;end if ((1 + 1)==v104) then v39=2;break;end if (v104~=0) then else v44=v24();v45={};v104=1;end end end if ((0 + 0)~=v39) then else local v105=0 + 0 ;local v106;while true do if (v105==0) then v106=0 -0 ;while true do if (v106==(2 -1)) then local v264=0;while true do if (v264~=(1481 -(305 + 1175))) then else v106=2;break;end if (v264~=0) then else v42={};v43={v40,v41,nil,v42};v264=999 -(471 + 527) ;end end end if (v106==(0 -0)) then v40={};v41={};v106=1 + 0 ;end if (v106~=2) then else v39=1931 -(1395 + 535) ;break;end end break;end end end v101=1;end if (v101==(1859 -(1017 + 841))) then v90=2 -1 ;break;end end end if (v90~=1) then else if ((1917 -(474 + 1441))==v39) then local v102=0 + 0 ;while true do local v103=870 -(477 + 393) ;while true do if (v103==0) then if (v102~=1) then else local v141=0 + 0 ;while true do if (v141~=(0 + 0)) then else for v277=363 -(114 + 248) ,v24() do v42[v277]=v24();end return v43;end end end if (v102~=0) then else for v239=1,v24() do local v240=0;local v241;while true do if (0~=v240) then else v241=v22();if (v21(v241,1 + 0 ,1)~=(262 -(256 + 6))) then else local v291=0 + 0 ;local v292;local v293;local v294;local v295;while true do if (v291==(1707 -(1688 + 17))) then while true do if (v292~=(146 -(113 + 31))) then else local v376=0;while true do if (v376~=(1664 -(456 + 1207))) then else v292=3 + 0 ;break;end if (v376~=0) then else local v401=0;local v402;while true do if (v401~=(0 -0)) then else v402=314 -(172 + 142) ;while true do if (0~=v402) then else local v412=0;while true do if (v412==(1 -0)) then v402=3 -2 ;break;end if (v412==(0 -0)) then if (v21(v294,2 -1 ,1)~=(1 + 0)) then else v295[2]=v45[v295[2]];end if (v21(v294,2 + 0 ,2)~=(563 -(120 + 442))) then else v295[3]=v45[v295[3]];end v412=1 + 0 ;end end end if (v402==(1 -0)) then v376=1;break;end end break;end end end end end if (v292==0) then local v377=0;local v378;while true do if (v377~=(0 -0)) then else v378=0;while true do if (v378==(1 -0)) then v292=1;break;end if (v378==(0 + 0)) then v293=v21(v241,2,98 -(30 + 65) );v294=v21(v241,2 + 2 ,6);v378=1;end end break;end end end if (v292==(4 -3)) then local v379=0;local v380;local v381;while true do if (v379==(1 -0)) then while true do if (v380~=0) then else v381=0;while true do if (v381~=0) then else v295={v23(),v23(),nil,nil};if (v293==0) then local v414=0;local v415;while true do if (v414==(0 -0)) then v415=0 + 0 ;while true do if (v415~=0) then else v295[6 -3 ]=v23();v295[4]=v23();break;end end break;end end elseif (v293==1) then v295[3]=v24();elseif (v293==2) then v295[1 + 2 ]=v24() -((2 + 0)^(12 + 4)) ;elseif (v293==(2 + 1)) then local v430=0 -0 ;local v431;local v432;while true do if (v430~=(128 -(95 + 33))) then else v431=0;v432=nil;v430=1;end if (v430~=1) then else while true do if (v431==0) then v432=0 + 0 ;while true do if (v432==0) then v295[3]=v24() -((3 -1)^16) ;v295[4]=v23();break;end end break;end end break;end end end v381=1 + 0 ;end if (v381==(1387 -(718 + 668))) then v292=2 + 0 ;break;end end break;end end break;end if (v379~=0) then else v380=0 -0 ;v381=nil;v379=1 + 0 ;end end end if (3==v292) then if (v21(v294,3,3)~=(1293 -(956 + 336))) then else v295[4]=v45[v295[4]];end v40[v239]=v295;break;end end break;end if (v291~=(387 -(68 + 318))) then else v294=nil;v295=nil;v291=2;end if (v291==0) then local v346=0;local v347;while true do if (0~=v346) then else v347=0 -0 ;while true do if (v347~=1) then else v291=1 + 0 ;break;end if (v347~=0) then else v292=0;v293=nil;v347=1297 -(555 + 741) ;end end break;end end end end end break;end end end for v242=1,v24() do v41[v242-1 ]=v29();end v102=1;end break;end end end end break;end end break;end end end break;end if (v38~=(0 -0)) then else v39=0;v40=nil;v38=1;end if (v38~=1) then else v41=nil;v42=nil;v38=2;end if (2~=v38) then else v43=nil;v44=nil;v38=1821 -(984 + 834) ;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v46)if (v1(v46,2)==79) then v20=v0(v3(v46,1,1));return "";else local v71=v2(v0(v46,16));if v20 then local v91=v5(v71,v20);v20=nil;return v91;else return v71;end end end);v18=1;end if (v18==4) then function v25()local v47=v24();local v48=v24();local v49=1 + 0 ;local v50=(v21(v48,1 + 0 ,717 -(269 + 428) ) * ((3 -1)^(25 + (1987 -(863 + 1117))))) + v47 ;local v51=v21(v48,17 + 4 ,17 + 14 );local v52=((v21(v48,7 + (32 -7) )==(1838 -(6 + 1831))) and  -(1 + 0)) or (3 -2) ;if (v51==(0 + 0)) then if (v50==(0 + 0)) then return v52 * 0 ;else v51=410 -(118 + 291) ;v49=1196 -(43 + 1153) ;end elseif (v51==(295 + 1752)) then return ((v50==(1678 -(1080 + (1410 -812)))) and (v52 * (((1217 -509) -(598 + 109))/((0 -0) + 0)))) or (v52 * NaN) ;end return v8(v52,v51-(1304 -(269 + 12)) ) * (v49 + (v50/((1708 -((2604 -938) + 40))^(84 -32)))) ;end v26=nil;function v26(v53)local v54=1253 -(99 + 1154) ;local v55;local v56;while true do if ((1971 -(1081 + 887))==v54) then return v6(v56);end if (v54==(0 -0)) then v55=nil;if  not v53 then v53=v24();if (v53==(0 -0)) then return "";end end v54=1 + 0 ;end if (v54==(1 + 0)) then v55=v3(v16,v19,(v19 + v53) -(2 -(1 + 0)) );v19=v19 + v53 ;v54=703 -(623 + 78) ;end if (v54==(1587 -(120 + 1465))) then v56={};for v92=1122 -(575 + 546) , #v55 do v56[v92]=v2(v1(v3(v55,v92,v92)));end v54=2 + 1 + 0 ;end end end v18=5;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==7) then function v30(v57,v58,v59)local v60=v57[1];local v61=v57[2];local v62=v57[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v12("#",...) -1 ;local function v70()local v72=v60;local v73=v61;local v74=v62;local v75=v28;local v76={};local v77={};local v78={};for v85=108 -((1419 -(646 + 735)) + 70) ,v69 do if ((v85>=v74) or (1033==(2580 -((911 -412) + 1297)))) then v76[v85-v74 ]=v68[v85 + (1200 -(193 + (2255 -(886 + 363)))) ];else v78[v85]=v68[v85 + ((540 -(188 + 350)) -1) ];end end local v79=(v69-v74) + 1 ;local v80;local v81;while true do local v86=0 + 0 ;while true do if ((1515<3355) and (v86==(848 -(47 + 801)))) then local v98=0;while true do if (((12124 -9370)>=(9 + 67)) and ((0 + 0)==v98)) then v80=v72[v66];v81=v80[1];v98=3 -2 ;end if ((v98==(2 -1)) or ((2185 -(45 + (1725 -(192 + 1396))))>=2966)) then v86=956 -(175 + 780) ;break;end end end if ((4233>=(36 + 484)) and (v86==(1 + 0))) then if ((v81<=(419 -(45 + 348))) or ((2255 -(484 + 107))==(1510 -(163 + 799)))) then if (((2931 -1798)<((578 -299) + (1858 -(189 + 319)))) and (v81<=(16 -(1161 -(741 + 416))))) then if (((1832 + 2083)==(9431 -5516)) and (v81<=(1 + 4))) then if (((3640 -(998 + 597))>(1152 + 146)) and (v81<=(1754 -(835 + 917)))) then if (((1718 -740)<((10291 + 3930) -9563)) and (v81<=(0 + 0))) then local v107=0 -0 ;local v108;local v109;local v110;local v111;while true do if ((v107==(2 + 0)) or ((1911 -953)>((2742 -464) + 924))) then for v253=v108,v67 do local v254=0 + 0 ;local v255;local v256;while true do if (((4 -3)==v254) or ((1734 -(180 + 1256))>=(1146 + 1099))) then while true do if (((0 -0)==v255) or (((4044 -(239 + 962)) -(1900 + 21))==(4473 -(86 + 531)))) then v256=481 -(68 + 413) ;while true do if ((0==v256) or ((87 + 353 + 1337)>=(5715 -(12 + 1033)))) then v111=v111 + (2 -1) ;v78[v253]=v109[v111];break;end end break;end end break;end if ((v254==(428 -(278 + 150))) or ((2988 -((853 -468) + 234))<301)) then v255=1304 -(959 + 345) ;v256=nil;v254=2 -1 ;end end end break;end if (((2635 -(61 + 248))<2383) and ((1662 -(1247 + 414))==v107)) then local v244=(2337 -(584 + 631)) -(1098 + 24) ;while true do if (((1256 -750)>(2111 -(607 + 1081))) and (v244==(2 -1))) then v107=1442 -(84 + 1356) ;break;end if (((1070 -(803 + 267))==v244) or ((4298 -(83 + 70))==(104 -77))) then v67=(v110 + v108) -1 ;v111=0 -0 ;v244=1129 -(482 + 646) ;end end end if (((4249 -(905 + 144))>1969) and (v107==(0 -(0 + 0)))) then v108=v80[2];v109,v110=v75(v78[v108](v13(v78,v108 + 1 + 0 + 0 ,v80[(554 + 1037) -(1492 + 96) ])));v107=2 -1 ;end end elseif ((((7937 -(542 + 607)) -(579 + (2068 -(136 + 707))))>=(1329 -625)) and (v81>1)) then v78[v80[2 -0 ]]=v58[v80[51 -(39 + 9) ]];else local v144=0 -0 ;local v145;local v146;local v147;while true do if ((v144==(1 -0)) or ((8283 -5558)>=(5481 -(476 + 872)))) then v147=nil;while true do if (((22 + 484)<=((4118 -(1394 + 576)) + 1956)) and (v145==(481 -(82 + 398)))) then for v320=1 + 0 , #v77 do local v321=0;local v322;local v323;while true do if ((v321==(972 -(415 + 557))) or (3917<400)) then local v356=647 -(98 + 549) ;while true do if (((4259 -(25 + 830))==(4185 -(439 + 342))) and (v356==(0 -0))) then v322=0 -0 ;v323=nil;v356=2 -1 ;end if ((((91 + 4577) -(746 + 96))<=(11962 -7790)) and (v356==1)) then v321=1 + 0 ;break;end end end if (((5472 -(520 + 645))>=((20584 -15026) -(1287 + (210 -88)))) and (v321==1)) then while true do if (((75 + 1418)<=(5674 -(679 + 182))) and (0==v322)) then v323=v77[v320];for v392=0 -0 , #v323 do local v393=77 -(71 + 6) ;local v394;local v395;local v396;local v397;local v398;while true do if ((v393==(0 -(1547 -(724 + 823)))) or ((7265 -4645)>=(7897 -5124))) then v394=0 + 0 ;v395=nil;v393=345 -((491 -331) + 184) ;end if ((v393==((64 + 263) -(15 + 310))) or ((10197 -5820)<1071)) then v398=nil;while true do if ((4903==(5963 -(754 + 306))) and (v394==(1 + 0))) then v397=nil;v398=nil;v394=2 -0 ;end if (((8309 -3331)>(512 + 2973)) and (v394==(0 -0))) then local v411=0;while true do if (((5901 -(1062 + 3604))==1235) and (v411==(0 + 0))) then v395=0 + (0 -0) ;v396=nil;v411=1 + 0 ;end if (((124 + 1009)<(928 + 33 + 2525)) and (v411==(1 + 0))) then v394=1 + 0 ;break;end end end if (((4504 -(284 + 880))>(2636 -(401 + 376))) and (v394==2)) then while true do if ((v395==(0 -0)) or (379==1930)) then local v416=0 -0 ;local v417;while true do if ((v416==(0 -0)) or ((1824 + 1616 + 399)==3529)) then v417=0 + 0 ;while true do if ((((8825 -(646 + 863)) -(19259 -14787))<(2040 + 1495 + 359)) and (v417==(0 + 0))) then local v433=751 -(511 + 240) ;while true do if ((v433==(0 + 0)) or ((107 + 1144 + 1442)<=(5482 -3774))) then v396=v323[v392];v397=v396[1 -0 ];v433=1 + 0 ;end if (((256 + 2575)<=(1378 + 1975)) and (v433==(1 + 0))) then v417=4 -3 ;break;end end end if ((((2835 -(1742 + 253)) + (3739 -1489))==(11565 -8475)) and ((1 -0)==v417)) then v395=610 -(496 + 113) ;break;end end break;end end end if (((3835 -(669 + 1058))<=(3673 + 640)) and (v395==(1 + (0 -0)))) then v398=v396[2 + 0 ];if (((v397==v78) and (v398>=v146)) or ((8743 -(7254 -(39 + 662)))>=(19134 -14951))) then local v420=886 -(594 + 292) ;local v421;local v422;while true do if ((v420==(1 -0)) or (((214 -116) + 540)>=(21133 -16647))) then while true do if ((3284<=(8345 -4476)) and ((0 + 0)==v421)) then v422=0;while true do if (((250 + 1158 + 103)<=(4592 -(11 + 1003))) and (v422==(53 -(10 + 43)))) then v147[v398]=v397[v398];v396[716 -(368 + 347) ]=v147;break;end end break;end end break;end if (((6332 -(1301 + 89))>(830 + 11)) and (v420==(0 -(0 + 0)))) then v421=0 -0 ;v422=nil;v420=1;end end end break;end end break;end end break;end if (((8116 -3227)>(3928 + 246)) and (v393==(1 + 0))) then v396=nil;v397=nil;v393=2 + 0 ;end end end break;end end break;end end end break;end if ((v145==(0 + 0)) or ((3059 -(746 + 553))>(6948 -2979))) then v146=v80[1 + 1 ];v147={};v145=1412 -(1378 + 33) ;end end break;end if ((v144==(1880 -(1751 + 129))) or ((6463 -2019)<(4328 -(282 + 251)))) then v145=0 -0 ;v146=nil;v144=915 -(837 + 77) ;end end end elseif ((v81<=3) or (((2976 -(187 + 979)) -(1358 + 228))>(4114 -(25 + 933)))) then local v112=0 -0 ;local v113;local v114;while true do if ((((29570 -19744) -6922)<3951) and (v112==(1429 -(993 + 435)))) then v78[v113 + (1165 -(706 + 458)) ]=v114;v78[v113]=v114[v80[4 + 0 ]];break;end if ((((2998 -(1182 + 432)) -(351 + 1033))==v112) or ((2274 -1341)<(1305 -(14 + 408)))) then local v249=0 + 0 ;while true do if ((v249==(1 -0)) or ((8156 -(6227 -(719 + 481)))>(6820 -2426))) then v112=1154 -(251 + 902) ;break;end if (((14481 -9706)>=(40 + 245)) and ((0 + 0)==v249)) then v113=v80[1033 -(942 + 89) ];v114=v78[v80[2 + 1 ]];v249=1 + 0 ;end end end end elseif (((214 + 2274)<=(2018 + 1064)) and (v81==(1 + 3))) then local v148=0 + 0 ;local v149;local v150;while true do if ((v148==0) or (1162>=(1583 -340))) then v149=0;v150=nil;v148=1;end if ((1809<2131) and (v148==(1314 -(959 + 354)))) then while true do if (((1978 -341)<=2888) and (v149==0)) then v150=v80[3 -1 ];v78[v150]=v78[v150]();break;end end break;end end else v78[v80[3 -1 ]]=v30(v73[v80[3 + 0 ]],nil,v59);end elseif ((v81<=(422 -(94 + 320))) or ((3053 + (1715 -882))==(2868 -(823 + 406)))) then if (((1553 + 2454)>(1973 -(386 + 1501))) and (v81<=(5 + 1))) then if ((v78[v80[767 -(215 + 550) ]]~=v80[1947 -(1860 + (257 -174)) ]) or ((700 + 470)>(5317 -2853))) then v66=v66 + 1 ;else v66=v80[9 -6 ];end elseif ((v81==(24 -17)) or (2219<(1579 -(705 + 794)))) then local v153=0;local v154;while true do if ((3014>=2741) and (v153==(0 + 0))) then v154=v80[4 -2 ];do return v13(v78,v154,v67);end break;end end else v78[v80[245 -(37 + 206) ]]=v80[8 -5 ];end elseif (((528 + 4099)>=(3889 -(180 + 17))) and (v81<=(21 -11))) then if ((2674>(2740 -(105 + 93 + 713 + 206))) and (v81==(20 -11))) then do return;end else local v157=1053 -(26 + 191 + (2407 -1571)) ;local v158;local v159;while true do if ((1045<2659) and (v157==(0 -0))) then v158=46 -(36 + 10) ;v159=nil;v157=1 -0 ;end if (((5317 -(611 + 407))<=(10407 -(10122 -4679))) and (v157==((6 -3) -2))) then while true do if (((7833 -3483)>3575) and (v158==((0 -0) -0))) then v159=v80[2];v78[v159]=v78[v159](v13(v78,v159 + 1 + 0 + 0 ,v67));break;end end break;end end end elseif ((v81>11) or ((2295 -(777 + 74))>(252 + 2065))) then local v160=0 + 0 ;local v161;local v162;local v163;local v164;while true do if ((4508>=(1263 -(129 + 1064))) and (v160==(4 -3))) then v163=nil;v164=nil;v160=344 -((344 -91) + 89) ;end if (((9791 -5425)>(4570 -(753 + 16))) and (v160==(5 -3))) then while true do if (((441 -148)<=(811 + 471)) and (v161==(171 -(62 + 75 + 34)))) then local v301=1831 -(923 + 908) ;while true do if (((5829 -(233 + 848))>(1617 + 1331)) and (v301==(0 -0))) then v162=v73[v80[(1291 -(598 + 692)) + 2 ]];v163=nil;v301=1;end if ((((11974 -(530 + 964)) -5739)>=((2947 + 156) -((32 -22) + 310))) and (1==v301)) then v161=1 + 0 ;break;end end end if (((595 + 1362)<=(4288 -(159 + 406))) and (2==v161)) then for v324=673 -(96 + 576) ,v80[184 -(178 + 1 + 1) ] do local v325=406 -(184 + (625 -403)) ;local v326;local v327;while true do if ((v325==0) or ((2033 -921)>4507)) then v326=0 -0 ;v327=nil;v325=(1304 -(219 + 1084)) + 0 ;end if ((v325==(1 + 0)) or (((13935 -9072) -(870 + 805))<=(3628 -(162 + 1547)))) then while true do if (((214 -(128 + 86))==v326) or (((1994 -(1043 + 647)) + 732)<=(7 + 84 + 132))) then local v386=1401 -(1038 + 363) ;while true do if ((4453==(2862 + 1591)) and (v386==(1 + 0))) then v326=59 -((1608 -(637 + 961)) + 48) ;break;end if (((4378 -3227)==(4820 -3669)) and (v386==(629 -(46 + 583)))) then v66=v66 + 1 + 0 ;v327=v72[v66];v386=1 + 0 + 0 ;end end end if (((1271 + 697)>(82 + (1724 -754))) and (v326==(1 + 0))) then if ((3821>=((5638 -3583) -1537)) and (v327[4 -3 ]==(77 -61))) then v164[v324-1 ]={v78,v327[3]};else v164[v324-((2 + 1) -(2 + 0)) ]={v58,v327[1 + 0 + 2 ]};end v77[ #v77 + (375 -(41 + (1816 -(786 + 697)))) ]=v164;break;end end break;end end end v78[v80[(1 -0) + 1 ]]=v30(v162,v163,v59);break;end if ((v161==(4 -3)) or ((670 + 2764 + 212)>4927)) then local v303=0;while true do if ((1311>(1728 -1268)) and (v303==(1431 -(1176 + 254)))) then v161=1484 -(205 + 1277) ;break;end if ((v303==(0 -0)) or ((3441 -(194 + (179 -120)))==(7088 -3317))) then v164={};v163=v10({},{__index=function(v357,v358)local v359=0 -0 ;local v360;local v361;local v362;while true do if (((1 -0)==v359) or ((3697 -1843)==(1806 -543))) then v362=nil;while true do if ((v360==(1 -0)) or ((521 -(14 + 4 + 2))>4526)) then while true do if (((4849 -(606 + 149))==(4812 -((1565 -868) + 21))) and (v361==(0 -0))) then local v410=0 -0 ;while true do if (((3035 -1710)>=(1795 -(1160 + 67))) and (v410==0)) then v362=v164[v358];return v362[1][v362[2]];end end end end break;end if (((3228 + 697)<(2973 + 1558)) and (v360==(1853 -(153 + 1700)))) then v361=373 -((732 -502) + 143) ;v362=nil;v360=1 + 0 ;end end break;end if (((3295 -(522 + 21))<(1952 + 1246)) and (v359==0)) then v360=0 -0 ;v361=nil;v359=(4575 -3276) -(265 + 1033) ;end end end,__newindex=function(v363,v364,v365)local v366=0 -0 ;local v367;local v368;while true do if ((v366==(228 -(222 + 6))) or ((19253 -14270)<(4460 -2818))) then v367=0 + 0 ;v368=nil;v366=1 + 0 ;end if ((v366==(950 -((1496 -1160) + 613))) or ((2863 -709)==(3727 -(343 + 332 + 193)))) then while true do if ((v367==(0 + (0 -0))) or (3096<(415 + 28))) then v368=v164[v364];v368[1628 -(1138 + 489) ][v368[445 -(198 + 245) ]]=v365;break;end end break;end end end});v303=1 + 0 + 0 ;end end end end break;end if ((v160==(269 -(209 + 60))) or ((3791 + (1590 -846))<3684)) then v161=0 -0 ;v162=nil;v160=1;end end elseif (((9168 -(18793 -13741))>=(4701 -2721)) and (v80[2]<v78[v80[2 + 2 ]])) then v66=v66 + 1 ;else v66=v80[3];end elseif ((v81<=(2011 -(1694 + 298))) or (4985==(241 + 536))) then if ((v81<=(1218 -(187 + 184 + 832))) or ((3059 -724)<(69 + 730))) then if ((1582>=(2369 -(274 + 749))) and (v81<=(47 -34))) then v78[v80[(282 -171) -(80 + 29) ]][v80[3 + 0 ]]=v78[v80[11 -(1 + 6) ]];elseif ((547<=(7828 -6029)) and (v81==(34 -20))) then v78[v80[2 -0 ]][v78[v80[1 + 2 ]]]=v80[4];else v78[v80[1889 -(354 + 1308 + 225) ]]=v78[v80[6 -3 ]] -v80[1418 -(813 + 601) ] ;end elseif ((v81<=17) or (4941<(7554 -5701))) then if ((v81>(5 + 11)) or ((5656 -((1251 -(267 + 72)) + 223))<(10339 -6980))) then if ( not v78[v80[2]] or ((4704 -3261)<=(420 -(410 -154)))) then v66=v66 + (3 -2) ;else v66=v80[2 + 0 + 1 ];end else v78[v80[2 + 0 ]]=v78[v80[3 + 0 ]];end elseif ((v81>((1069 + 806) -(1506 + 351))) or ((4304 -((1231 -367) + 525))==(4266 -((357 -173) + 585 + 28)))) then v66=v80[174 -(121 + 50) ];elseif ((v78[v80[2]]==v80[6 -2 ]) or (4778<=((1406 -1024) + 53 + 3035))) then v66=v66 + (917 -(851 + 65)) ;else v66=v80[1 + 2 ];end elseif ((v81<=22) or (2255>(9067 -4862))) then if ((v81<=(1405 -(616 + 42 + 727))) or ((2991 + 1481)>4791)) then local v117=1666 -(705 + 961) ;local v118;local v119;local v120;local v121;while true do if (((1169 -(1004 + 164))==v117) or ((12 + 349)==(3915 -1622))) then local v250=0 -0 ;while true do if (((13267 -8803)>(75 + 3181)) and (0==v250)) then v120=nil;v121=nil;v250=(2326 -(1008 + 113)) -(422 + 130 + 652) ;end if (((1627 + 3299)==(4513 + 413)) and (v250==(1 + 0))) then v117=1371 -(1017 + (860 -(215 + 293))) ;break;end end end if ((v117==2) or ((4627 -(1020 + 67))<=(796 + 25))) then while true do if ((107<(2580 -(926 + 43))) and (v118==(1 -0))) then v121=0;for v289=v119,v80[695 -(508 + 183) ] do local v290=0 + 0 + 0 ;while true do if ((v290==(462 -(207 + 255))) or ((3321 -((3161 -2482) + 730))>=(14241 -9282))) then v121=v121 + 1 + 0 ;v78[v289]=v120[v121];break;end end end break;end if ((v118==(508 -(265 + 243))) or ((3590 -2175)>(4509 -((2147 -(219 + 1543)) + 360)))) then local v281=(0 -0) -0 ;while true do if ((v281==((148 -(51 + 97)) -(1268 -(841 + 427)))) or ((6482 -3320)<(3263 -(43 + 1056)))) then v119=v80[2 -0 ];v120={v78[v119](v78[v119 + ((1465 -(892 + 571)) -1) ])};v281=2 -1 ;end if ((v281==((1033 -(414 + 618)) -0)) or (104>=((8973 -5822) -(145 + 524)))) then v118=1934 -(1315 + 618) ;break;end end end end break;end if ((v117==(920 -(253 + 667))) or (3634<(3293 -(114 + 11)))) then v118=0 + 0 ;v119=nil;v117=154 -(116 + 37) ;end end elseif ((v81==(31 -10)) or ((3049 + 269)>(1927 + 2499))) then v78[v80[1487 -(1123 + 271 + 91) ]]=v78[v80[6 -3 ]] -v78[v80[10 -6 ]] ;else v78[v80[1200 -((2437 -1923) + 684) ]]=v59[v80[8 -5 ]];end elseif (((3067 + 501 + 82)<(7407 -2504)) and (v81<=(152 -(90 + 38)))) then if ((2533==(1489 + 1044)) and (v81==((1648 -(786 + 541)) -((18 -11) + 291)))) then if ((v78[v80[1 + 1 ]]<=v80[3 + 1 ]) or ((8 + 13)>3234)) then v66=v66 + (1 -0) ;else v66=v80[3 + 0 ];end else v78[v80[221 -(115 + 104) ]][v78[v80[995 -((1596 -(241 + 1078)) + 715) ]]]=v78[v80[4]];end elseif ((2880>(3587 -((6529 -5073) + 460))) and (v81==(25 + 0))) then do return v78[v80[2]];end else local v176=0 -0 ;local v177;local v178;while true do if (((1971 + 159)>=(2302 -1482)) and (v176==0)) then v177=0 + 0 ;v178=nil;v176=1 + 0 ;end if ((v176==(1 + 0)) or ((840 -462)==3019)) then while true do if ((v177==0) or ((4644 -(670 + 823))<=(1358 + 1705))) then v178=v78[v80[11 -7 ]];if ((((1489 + 1038) -1110)<(7671 -6061)) and  not v178) then v66=v66 + (2 -1) ;else local v344=156 -((231 -86) + 11) ;local v345;while true do if ((v344==(0 + 0)) or (3409>(6685 -(1495 + 440)))) then v345=0 -0 ;while true do if (((1938 -1513)<=(4314 -(220 + 1123))) and (v345==0)) then v78[v80[5 -3 ]]=v178;v66=v80[4 -1 ];break;end end break;end end end break;end end break;end end end elseif ((v81<=(1765 -(1214 + (2007 -(708 + 787))))) or (((1773 + 11072) -(88 + 9313))==(934 -(68 + 521 + 94)))) then if ((v81<=(24 + 8)) or ((1357 + 1092)<(2921 -(108 + 1035)))) then if ((v81<=(23 + 6)) or ((3361 -(925 + (831 -(309 + 96))))<=564)) then if ((((8283 -(453 + 406)) -5212)<=(4776 -(346 + (309 -227)))) and (v81<=(25 + 2))) then v78[v80[1 + 1 ]]=v78[v80[3 + 0 ]] + v80[2 + 2 ] ;elseif (((10548 -7134)>(10549 -7534)) and (v81>((214 -(73 + 87)) -26))) then v59[v80[9 -6 ]]=v78[v80[4 -2 ]];else local v181=0;local v182;local v183;local v184;local v185;while true do if ((3839<=((9837 + 1811) -6980)) and (v181==((1048 -(531 + 516)) + 1))) then while true do if (((1827 -836)<(472 + 1949)) and (v182==1)) then v185=0;for v329=v183,v80[7 -3 ] do local v330=0 + 0 ;while true do if ((v330==(0 -0)) or ((1534 -(379 + 422))>(2062 + 1917))) then v185=v185 + 1 ;v78[v329]=v184[v185];break;end end end break;end if (((0 + 0)==v182) or ((2490 + 336)>3185)) then local v305=(2313 -(1004 + 296)) -(172 + 841) ;while true do if ((v305==(0 + 0 + (0 -0))) or ((3012 -2214)==(16504 -12201))) then v183=v80[1863 -(1124 + 737) ];v184={v78[v183](v13(v78,v183 + (1419 -(414 + (1314 -(238 + 72)))) ,v80[7 -4 ]))};v305=1 -0 ;end if (((1000 + 227)<(419 + 1441)) and (v305==(3 -2))) then v182=1;break;end end end end break;end if ((v181==(1 + 0)) or (196>=((50294 -32965) -12848))) then v184=nil;v185=nil;v181=2 + 0 ;end if ((v181==(1972 -(232 + 1740))) or ((482 + 3456)<=(1187 -(296 + 598)))) then v182=360 -(70 + 290) ;v183=nil;v181=(1 -0) -0 ;end end end elseif ((v81<=(100 -70)) or ((470 + 395)<412)) then local v123=763 -(532 + 231) ;local v124;local v125;local v126;while true do if ((v123==1) or ((168 + 432 + 482)==287)) then v126=nil;while true do if (((1488 -(542 + 748))<1694) and ((0 + (0 -0))==v124)) then v125=0 -0 ;v126=nil;v124=1892 -(1225 + 666) ;end if ((v124==(1146 -(348 + 797))) or (3431>((12628 -10058) + 1452))) then while true do if (((0 + 0)==v125) or (((6273 -(73 + 1579)) -(1242 + 51))<=(2428 -1186))) then v126=v80[2 + 0 ];v78[v126](v78[v126 + 1 ]);break;end end break;end end break;end if ((v123==(0 + 0 + 0)) or ((1633 -(118 + 123))>(10214 -6077))) then v124=0 -0 ;v125=nil;v123=(2 -1) + 0 + 0 ;end end elseif (((606 + (4886 -(1326 + 499)))>=(17273 -13804)) and (v81==(46 -15))) then local v186=0;local v187;local v188;while true do if ((v186==0) or ((2403 + 1393 + 331)<=(9686 -6277))) then v187=670 -((399 -202) + 473) ;v188=nil;v186=1;end if (((1083 + 168)<2390) and (v186==(1192 -((955 -(312 + 160)) + 708)))) then while true do if ((v187==((0 + 0) -0)) or ((1311 + 1310)>=(92 + 3079))) then v188=v80[2 + (0 -0) ];v78[v188](v13(v78,v188 + 1 + 0 ,v80[14 -11 ]));break;end end break;end end else v78[v80[572 -(396 + 174) ]][v80[6 -(1 + 2) ]]=v80[2 + 2 ];end elseif ((v81<=(18 + 17)) or ((6804 -2896)<=(690 -(44 + (117 -53))))) then if ((v81<=(68 -35)) or ((11228 -7166)>4886)) then v78[v80[1 + 1 ]]=v78[v80[3]][v78[v80[4 + 0 ]]];elseif ((v81>34) or (3049>=(4808 -(108 + 938)))) then local v191=0;local v192;local v193;local v194;local v195;while true do if (((76 + 2340)==2416) and (v191==(5 -3))) then while true do if ((1171>(2240 -1355)) and (v192==1)) then v195=nil;while true do if (((3831 -1362)>=(289 + 292)) and (v193==0)) then local v350=0 + 0 ;local v351;while true do if ((v350==(1274 -(652 + 622))) or (1448>=((6979 -(861 + 286)) -(1834 + (532 -(387 + 52)))))) then v351=0;while true do if ((((5433 -3454) -1175)<=(1295 + 1071)) and (v351==(0 -0))) then v194=v80[1356 -(571 + 783) ];v195=v78[v194];v351=393 -(176 + 216) ;end if (((3 -2)==v351) or ((5741 -(843 + 785))==475)) then v193=147 -(129 + 17) ;break;end end break;end end end if ((v193==(830 -(565 + 264))) or ((4063 -(72 + 986))==(5683 -(1533 + 382)))) then for v371=v194 + (1 -0) ,v80[890 -(649 + 238) ] do v7(v195,v78[v371]);end break;end end break;end if (((15364 -10822)<(6329 -1496)) and (v192==0)) then v193=0 -0 ;v194=nil;v192=1;end end break;end if ((0==v191) or (646>(1691 -530))) then v192=0;v193=nil;v191=1 + 0 ;end if (((3236 + (37 -12))>=(325 + 244)) and (v191==(3 -2))) then v194=nil;v195=nil;v191=2 + 0 ;end end else local v196=0 + 0 ;local v197;local v198;local v199;while true do if (((5095 -(358 + 226))>(32 -18)) and (v196==(0 + 0))) then v197=0 -0 ;v198=nil;v196=1;end if (((8872 -6065)>=(7938 -5489)) and (v196==(1718 -(774 + 943)))) then v199=nil;while true do if ((1==v197) or (4680<=((695 + 3728) -2991))) then while true do if ((v198==(0 + 0)) or (1229>(6014 -2238))) then v199=v80[1661 -(1259 + (503 -(23 + 80))) ];do return v78[v199](v13(v78,v199 + (2 -1) ,v80[340 -(305 + 32) ]));end break;end end break;end if ((1152>=162) and (v197==(1022 -(797 + 225)))) then v198=1801 -(867 + 934) ;v199=nil;v197=1267 -(1011 + 255) ;end end break;end end end elseif (((10743 -7434)>3214) and (v81<=(1567 -((1533 -(1041 + 97)) + 1135)))) then if ((v81==(25 + 11)) or (748>(376 + 1525))) then local v200=0 -0 ;local v201;local v202;local v203;while true do if (((6512 -(1573 + 139))==(5472 -(226 + 446))) and ((1355 -(137 + 1218))==v200)) then local v266=0 + 0 ;while true do if (((2953 -(191 + 90))==(4719 -2047)) and (v266==(3 -2))) then v200=14 -(10 + 3) ;break;end if ((v266==((879 + 44) -(31 + 892))) or ((5432 -1631)==(3738 -(798 + 118)))) then v201=v80[1 + 1 ];v202=v78[v201];v266=1 -0 ;end end end if (((1259 + 177)==(3702 -2266)) and (v200==((2 -1) + 0))) then v203=v80[210 -(168 + 39) ];for v282=1110 -(264 + 845) ,v203 do v202[v282]=v78[v201 + v282 ];end break;end end else local v204=0 + (0 -0) ;local v205;local v206;local v207;while true do if ((v204==(999 -(385 + 370 + 244))) or ((3370 -(329 + 782))==(3806 -(197 + 464)))) then v205=0;v206=nil;v204=2 -1 ;end if ((v204==(2 -(1 + 0))) or (((2801 -(5 + 32)) -1749)>=(5381 -(680 + 1040)))) then v207=nil;while true do if (((8457 -3847)>2077) and (v205==(1244 -(1193 + 50)))) then while true do if (((1828 -(205 + (2010 -1427)))<(1591 + 2096)) and (v206==(0 -0))) then v207=v80[(1019 -(314 + 697)) -6 ];do return v13(v78,v207,v207 + v80[(2371 -1853) -(258 + 257) ] );end break;end end break;end if ((3501>(6552 -3867)) and (v205==(0 -0))) then local v309=0;while true do if ((((1728 -(400 + 1326)) -1)==v309) or ((6646 -5026)==(3976 -(216 + 145 + 118)))) then v205=497 -(378 + 118) ;break;end if ((4493>=(24 + 805)) and (v309==0)) then v206=0;v207=nil;v309=1;end end end end break;end end end elseif ((4746==((33063 -22610) -(6522 -(403 + 412)))) and (v81>38)) then if ((v80[6 -(1442 -(914 + 524)) ]==v78[v80[15 -11 ]]) or ((1439 -(62 + 53))==(129 + 4172))) then v66=v66 + 1 + 0 ;else v66=v80[3];end else v78[v80[1 + 1 ]]=v80[1402 -(164 + 1235) ]~=(0 -0) ;end elseif ((v81<=46) or ((12473 -8126)==((1163 + 199) -(169 + 81)))) then if (((419 + (4283 -3225))>(1029 -(265 + 239))) and (v81<=(61 -19))) then if ((2917==(2433 + 484)) and (v81<=(93 -53))) then local v129=v80[(2717 -(466 + 685)) -(1409 + 155) ];local v130=v80[4];local v131=v129 + 1 + (91 -(48 + 42)) ;local v132={v78[v129](v78[v129 + 1 + 0 ],v78[v131])};for v137=1,v130 do v78[v131 + v137 ]=v132[v137];end local v133=v132[1 + 0 + (0 -0) ];if (v133 or ((1053 -253)>(467 + 3046))) then local v209=689 -(444 + 245) ;while true do if ((v209==(0 -0)) or ((12768 -7816)<=(6541 -3292))) then v78[v131]=v133;v66=v80[5 -(4 -2) ];break;end end else v66=v66 + (2 -1) ;end elseif ((v81==(1347 -(655 + 651))) or ((8833 -4588)<(4976 -(1088 + 443)))) then for v251=v80[2],v80[299 -(172 + 124) ] do v78[v251]=nil;end elseif ((v78[v80[2]]==v78[v80[4]]) or ((586 + 841)>=4750)) then v66=v66 + (1115 -(772 + 342)) ;else v66=v80[2 + 1 ];end elseif ((v81<=(64 -(19 + 1))) or ((680 + 1442)<=((7423 -(27 + 844)) -(17290 -12467)))) then if ((4034>((1616 + 330) -1047)) and (v81==(544 -(45 + 456)))) then v78[v80[(1 + 1) -0 ]]= #v78[v80[3]];else local v211=0 -0 ;local v212;while true do if ((v211==0) or ((1098 + 1337)<147)) then v212=v80[1 + 1 ];v78[v212]=v78[v212](v13(v78,v212 + (1860 -(983 + 876)) ,v80[11 -8 ]));break;end end end elseif (((2389 + 2596)==4985) and (v81>((4830 -3500) -(569 + 716)))) then if (((5561 -4166)==(726 + 79 + 590)) and v78[v80[2]]) then v66=v66 + 1 + 0 ;else v66=v80[653 -(153 + 497) ];end else v78[v80[574 -(211 + 361) ]]={};end elseif ((((15050 -10377) -(207 + 1554))<3504) and (v81<=(1092 -(244 + 799)))) then if (((3622 -(492 + (1067 -(282 + 769))))>=(2245 + 507)) and (v81<=(1025 -(207 + 771)))) then local v134=0;local v135;local v136;while true do if ((v134==1) or ((1435 + 1377)>(4348 -(41 + 519)))) then while true do if (((2022 -(823 + 490))<=1102) and ((1903 -(1035 + 868))==v135)) then v136=v80[2];v78[v136]=v78[v136](v78[v136 + 1 ]);break;end end break;end if (((3190 -(437 + 734))==2019) and (v134==(1789 -(1041 + 748)))) then v135=1332 -(359 + 973) ;v136=nil;v134=1;end end elseif (((3775 -(279 + 797))>=497) and (v81==(200 -152))) then local v214=0 + 0 ;local v215;local v216;local v217;while true do if (((3541 -(85 + 139))>=(1179 + 1867)) and (v214==(0 + 0))) then v215=0;v216=nil;v214=3 -2 ;end if ((v214==(1 + 0 + 0)) or (3190>(2222 + 1917))) then v217=nil;while true do if ((v215==(1 -0)) or ((4540 -((1287 -405) + 46))<(883 + 93 + 283))) then for v332=v216 + (1 -0) ,v80[1 + 3 ] do v217=v217   .. v78[v332] ;end v78[v80[1 + 1 ]]=v217;break;end if (((764 + 1459)>=(90 + 336)) and (v215==0)) then local v311=0 -0 ;while true do if (((909 + 2305)==(3224 -(9 + 1))) and (v311==(0 + 0))) then v216=v80[3];v217=v78[v216];v311=1806 -(1401 + 404) ;end if ((4341>=(15459 -11490)) and (1==v311)) then v215=761 -(92 + 668) ;break;end end end end break;end end else v78[v80[2 + 0 ]]=v78[v80[603 -(30 + 179 + 391) ]][v80[10 -6 ]];end elseif ((((5426 -1327) -(182 + (3543 -2726)))<=3133) and (v81<=(126 -75))) then if ((v81>50) or ((3369 + 478)==2408)) then v58[v80[3 + 0 ]]=v78[v80[28 -(10 + 16) ]];else local v222=0 -0 ;local v223;local v224;local v225;while true do if (((3682 -(405 + 263 + 121 + 206))>390) and ((335 -(186 + 149))==v222)) then local v272=(410 -(408 + 2)) -0 ;while true do if ((v272==(839 -(186 + 652))) or ((5044 -(137 + 1015))<=(1848 + 822))) then v222=1 + 0 ;break;end if (((10185 -7254)<((9174 -3535) -(335 + 879))) and (v272==(381 -(230 + 2 + 149)))) then v223=v80[1817 -(1480 + 335) ];v224=v78[v223];v272=1;end end end if (((6338 -(1213 + 312))>(91 + 580 + (2564 -1051))) and (v222==(1 + 0))) then v225=v78[v223 + (858 -((1875 -1338) + 319)) ];if (((3132 -(360 + 134))==(5936 -3298)) and (v225>(1811 -(241 + 1570)))) then if (((301 + 636 + 1012)<=(5918 -(770 + 695))) and (v224>v78[v223 + (1142 -(798 + 343)) ])) then v66=v80[3 + 0 ];else v78[v223 + ((563 -(223 + 332)) -5) ]=v224;end elseif ((v224<v78[v223 + 1 + 0 ]) or ((8570 -6003)==(4979 -((604 -(219 + 170)) + (639 -301))))) then v66=v80[7 -4 ];else v78[v223 + 3 ]=v224;end break;end end end elseif ((v81==52) or ((891 + 1619)>=(419 + 3507))) then local v226=403 -(1 + 70 + 332) ;local v227;local v228;local v229;while true do if ((v226==(1 + 1)) or ((449 -(144 + 19))==(1346 + 386))) then if ((((12042 -8291) -(156 + 151 + 732))<=(4085 -(845 + (1095 -(452 + 177))))) and (v228>(0 + 0))) then if ((((2358 -556) + 2508)>=(336 + 2961)) and (v229<=v78[v227 + 1 + 0 ])) then local v337=0 + (0 -0) ;while true do if ((v337==(0 + (0 -0))) or ((6020 -(871 + 218))<=((2106 -(246 + 892)) + 1724))) then v66=v80[7 -4 ];v78[v227 + 3 + 0 ]=v229;break;end end end elseif ((v229>=v78[v227 + 1 ]) or (3871>(3278 + 1543))) then local v338=0 -0 ;local v339;while true do if (((5954 -(627 + (1962 -(709 + 616))))==(5379 -(226 + 463))) and (v338==(0 -0))) then v339=1318 -(421 + 897) ;while true do if ((v339==(599 -(235 + 364))) or ((4270 -(426 + 412))==(2728 -833))) then v66=v80[8 -5 ];v78[v227 + ((5 + 8) -10) ]=v229;break;end end break;end end end break;end if ((v226==(2 -1)) or ((3590 -(355 + 51))==((121 -84) + 475))) then v229=v78[v227] + v228 ;v78[v227]=v229;v226=3 -(1 + 0) ;end if ((v226==(0 -0)) or ((765 + 998)>=((4500 + 914) -(50 + 553 + 383)))) then local v275=0;while true do if (((19230 -14352)>=(513 + 1938)) and (v275==(1944 -(1784 + 160)))) then v227=v80[1424 -(312 + 1110) ];v228=v78[v227 + 2 + 0 ];v275=2 -1 ;end if ((v275==(1 -0)) or (1609<=(470 -127))) then v226=1408 -(848 + 559) ;break;end end end end else local v230=0 + 0 ;local v231;local v232;local v233;while true do if ((v230==(1 + 0 + 0)) or ((584 + 172 + 3065)<=3714)) then v233=1846 -((2438 -(118 + 533)) + 31 + 28) ;for v287=v231,v80[19 -15 ] do local v288=0 -(506 -(38 + 468)) ;while true do if ((0==v288) or (1945>(674 + 1715))) then v233=v233 + 1 ;v78[v287]=v232[v233];break;end end end break;end if (((3358 + 506)>(917 + 616)) and (v230==(0 + 0))) then local v276=0;while true do if (((2838 -(430 + 689))==1719) and (v276==(0 + 0))) then v231=v80[1 + (1117 -(441 + 675)) ];v232={v78[v231](v13(v78,v231 + (1485 -(830 + 588 + 66)) ,v67))};v276=1897 -(520 + 1376) ;end if ((((13615 -7727) -1250)>=3774) and (v276==1)) then v230=1 + 0 ;break;end end end end end v66=v66 + 1 + (0 -0) ;break;end end end end A,B=v28(v11(v70));if  not A[1] then local v87=0;local v88;while true do if (v87==0) then v88=v57[4][v66] or "?" ;error("Script error at ["   .. v88   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v63,v64,v65)if v65 then local v82=(v63/(((1433 -952) -(393 + 86))^(v64-(315 -(227 + 87)))))%((1514 -(394 + 1118))^(((v65-(1 + 0)) -(v64-(2 -1))) + 1 + (0 -0))) ;return v82-(v82%(1 + 0)) ;else local v83=763 -(654 + 86 + 23) ;local v84;while true do if (v83==(1255 -(1038 + 217))) then v84=(2 -(0 -0))^(v64-(1 + 0)) ;return (((v63%(v84 + v84))>=v84) and (1 + 0)) or (0 -0) ;end end end end v22=nil;v18=2;end end end vv9(),...);end
